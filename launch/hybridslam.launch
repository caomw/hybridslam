<launch>
    <!--*******************************          Hybrid SLAM         *******************************
    ***    
    *** To use this launch file, do the following:
    ***
    *** 1) Configure where the launch file is running
    *** 2) Configure the mode of operation
    *** 3) Configure the data source
    *** 4) Enable/Disable auxiliary components
    -->  

    <!--*******************************    Hybrid SLAM Arguments     *******************************-->

    <!-- Are we using running the system on live data or playing back? [options: live, playback] -->
    <arg name="data_mode_live"     default="false" />
    <arg name="data_mode_playback" default="false" />

    <!-- If live, are we using real hardware or simulation? [options: real, sim] -->
    <arg name="system_mode_real" default="false" />
    <arg name="system_mode_sim"  default="false" />

    <!-- If real hardware, where are we running this launch file? [options: desktop, aramis, athos, porthos] -->
    <arg name="robot_desktop"  default="false" />
    <arg name="robot_aramis"   default="false" />
    <arg name="robot_athos"    default="false" />
    <arg name="robot_porthos"  default="false" />

    <!-- If playback or simulation, we have to use sim time -->
    <arg name="use_sim_time" default="false" />
    <param name="use_sim_time" value="$(arg use_sim_time)" />

    <!-- Set namespace according to choices above -->
    <!--<group if="$(arg robot_desktop)">      <arg name="robot" value="desktop" /> </group>
    <group if="$(arg robot_aramis)" >      <arg name="robot" value="aramis"  /> </group>
    <group if="$(arg robot_athos)"  >      <arg name="robot" value="athos"   /> </group>
    <group if="$(arg robot_porthos)">      <arg name="robot" value="porthos" /> </group>-->

    <!-- What auxiliary parts of the system do we want to disable? -->
    <arg name="disable_control"       default="false" /> 
    <arg name="disable_visualization" default="false" /> 
    <arg name="disable_logging"       default="false" /> 

    <!-- If enabled, what nodes do we want to log? -->
    <arg name="record_pioneer"             default="true" />
    <arg name="record_kinect"              default="true" />
    <arg name="record_videre_stereo"       default="true" />
    <arg name="record_mobileranger_stereo" default="true" />
    <arg name="record_unibrain_camera"     default="true" />
    <arg name="record_cyton_arm"           default="true" />

    <!-- If playback, what bag file are we using? -->
    <arg name="playback_rosbag" default="rgbd_dataset/datasets/rgbd_dataset_freiburg2_pioneer_360.bag" />
    <!--<arg name="playback_rosbag" default="rgbd_dataset/datasets/rgbd_dataset_freiburg2_pioneer_slam.bag" />-->
    <!--<arg name="playback_rosbag" default="rgbd_dataset/datasets/rgbd_dataset_freiburg2_pioneer_slam2.bag" />-->
    <!--<arg name="playback_rosbag" default="rgbd_dataset/datasets/rgbd_dataset_freiburg2_pioneer_slam3.bag" />-->

    <!--*******************************   Hybrid SLAM Launch Files   *******************************-->

    <group if="$(arg data_mode_live)" >
    <group unless="$(arg data_mode_playback)">

        <include file="$(find hybridslam)/launch/hybridslam_control.launch" unless="$(arg disable_control)" ns="$(arg robot)" />

        <group if="$(arg system_mode_real)">
        <group unless="$(arg system_mode_sim)">

            <group if="$(arg robot_desktop)">
                <group unless="$(arg robot_aramis)">
                <group unless="$(arg robot_athos)">
                <group unless="$(arg robot_porthos)">
                    <include file="$(find hybridslam)/launch/robots/desktop.launch" ns="$(arg robot)">
                        <arg name="disable_logging" value="$(arg disable_logging)" />
                        <arg name="record_kinect"   value="$(arg record_kinect)"   />
                    </include>
                </group>
                </group>
                </group>
            </group>

            <group if="$(arg robot_aramis)">
                <group unless="$(arg robot_desktop)">
                <group unless="$(arg robot_athos)">
                <group unless="$(arg robot_porthos)">
                    <include file="$(find hybridslam)/launch/robots/aramis.launch" ns="$(arg robot)">
                        <arg name="disable_logging"      value="$(arg disable_logging)"      />
                        <arg name="record_pioneer"       value="$(arg record_pioneer)"       />
                        <arg name="record_kinect"        value="$(arg record_kinect)"        />
                        <arg name="record_videre_stereo" value="$(arg record_videre_stereo)" />
                    </include>
                </group>
                </group>
                </group>
            </group>

            <group if="$(arg robot_athos)">
                <group unless="$(arg robot_desktop)">
                <group unless="$(arg robot_aramis)">
                <group unless="$(arg robot_porthos)">
                    <include file="$(find hybridslam)/launch/robots/athos.launch" ns="$(arg robot)">
                        <arg name="disable_logging"        value="$(arg disable_logging)"        />
                        <arg name="record_pioneer"         value="$(arg record_pioneer)"         />
                        <arg name="record_videre_stereo"   value="$(arg record_videre_stereo)"   />
                        <arg name="record_unibrain_camera" value="$(arg record_unibrain_camera)" />
                    </include>
                </group>
                </group>
                </group>
            </group>

            <group if="$(arg robot_porthos)">
                <group unless="$(arg robot_desktop)">
                <group unless="$(arg robot_aramis)">
                <group unless="$(arg robot_athos)">
                    <include file="$(find hybridslam)/launch/robots/porthos.launch" ns="$(arg robot)">
                        <arg name="disable_logging"            value="$(arg disable_logging)"            />
                        <arg name="record_pioneer"             value="$(arg record_pioneer)"             />
                        <arg name="record_cyton_arm"           value="$(arg record_cyton_arm)"           />
                        <arg name="record_mobileranger_stereo" value="$(arg record_mobileranger_stereo)" />
                    </include>
                </group>
                </group>
                </group>
            </group>

        </group>
        </group>

        <group if="$(arg system_mode_sim)">
        <group unless="$(arg system_mode_real)">
            <!-- TO DO: simulation environment setup -->
        </group>
        </group>
    </group>
    </group>

    <group if="$(arg data_mode_playback)">
    <group unless="$(arg data_mode_live)">

        <!--<node pkg="tf" type="tf_remap" name="tf_remap_playback" output="screen">
            <rosparam command="load" file="$(find hybridslam)/config/playback/rgbd_dataset_pioneer_mappings.yaml" />
        </node>-->
        
        <!--rosbag play ++clock src/hybridslam/data/rgbd_dataset/datasets/rgbd_dataset_freiburg2_pioneer_360.bag-->
        <node pkg="rosbag" type="play" name="rosbag_playback" args="--clock $(find hybridslam)/data/$(arg playback_rosbag)">
            <!--<remap from="/tf" to="/old_tf" />-->
        </node>
    </group>
    </group>

    <include file="$(find hybridslam)/launch/hybridslam_visualization.launch" unless="$(arg disable_visualization)" />

    <!-- Convert depth images to a point cloud -->
    <node pkg="nodelet" type="nodelet" args="manager" name="depth_image_proc_nodelet_manager" output="screen" />

    <node pkg="nodelet" type="nodelet" name="cloudify" args="load depth_image_proc/point_cloud_xyzrgb depth_image_proc_nodelet_manager --no-bond">
        <remap from="depth_registered/image_rect" to="camera/depth/image" />
        <remap from="depth_registered/points"     to="camera/depth_registered/points" />
        <remap from="rgb/image_rect_color"        to="camera/rgb/image_color" />
        <remap from="rgb/camera_info"             to="camera/rgb/camera_info" />
    </node>

    <node pkg="hybridslam" type="sensor_processor" name="hybridslam_sensor_processor" output="screen">
        <remap from="odometry"     to="pose" />
        <remap from="kinect_cloud" to="camera/depth_registered/points" />
        <!--<remap from="odometry"     to="$(arg robot)/pose" />
        <remap from="kinect_cloud" to="$(arg robot)/kinect/depth_registered/points" />-->
    </node>

    <!--<node pkg="rosbag" type="record" name="rosbag_record_diag"
         args="-o /tmp/hybridslam-diag /diagnostics /rosout"
         unless="$(arg disable_logging)" /> -->

</launch>
